name: Get Externals

inputs:
  targetDir:
    required: true

runs:
  using: "composite"
  steps:
  - name: Retrieve Externals (Linux)
    shell: bash
    if: runner.os == 'Linux'
    run: |
      curl -L https://github.com/disorderedmaterials/Gudrun/releases/download/${{ env.gudrunTag }}/binaries-${{ env.gudrunTag }}-linux.zip > gudrun-binaries.zip
      curl -L https://github.com/disorderedmaterials/ModEx/releases/download/${{ env.modexTag }}/binaries-${{ env.modexTag }}-linux.zip > modex-binaries.zip
  - name: Build Externals (OSX)
    shell: bash
    if: runner.os == 'MacOS'
    run: |
      # Install Ninja
      brew update-reset
      brew install ninja
      # Retrieve Gudrun source
      curl -L https://github.com/disorderedmaterials/Gudrun/archive/refs/tags/${{ env.gudrunTag }}.tar.gz > gudrun-source.tar.gz
      tar -zxvf gudrun-source.tar.gz
      cd Gudrun-${{ env.gudrunTag }}
      # Retrieve pre-built HDF5 libs
      curl -L https://github.com/disorderedmaterials/HDF5/releases/download/${{ env.hdf5tag }}/${{ env.hdf5tag }}-osx.zip > hdf5-osx.zip
      unzip hdf5-osx.zip
      # Build Gudrun binaries
      mkdir build
      cd build
      cmake ../ -G Ninja -DCMAKE_Fortran_COMPILER:string="gfortran-11" -DLOCAL_STATIC_HDF5:bool=True -DHDF5_DIR:path=$(pwd)/../${{ env.hdf5tag }} -DCMAKE_Fortran_FLAGS:string="-cpp" -DGUDPY_COMPATIBILITY=1
      ninja
      ninja install
      cd ../
      # Create binaries zip
      mkdir binaries-${{ env.gudrunTag }}-linux
      mv bin/* binaries-${{ env.gudrunTag }}-linux
      zip -9rv ../gudrun-binaries.zip binaries-${{ env.gudrunTag }}-linux/
  - name: Retrieve Externals (OSX)
    shell: bash
    if: runner.os == 'MacOS'
    run: |
      curl -L https://github.com/disorderedmaterials/ModEx/releases/download/${{ env.modexTag }}/binaries-${{ env.modexTag }}-osx.zip > modex-binaries.zip
  - name: Retrieve Externals (Windows)
    shell: bash
    if: runner.os == 'Windows'
    run: |
      curl -L https://github.com/disorderedmaterials/Gudrun/releases/download/${{ env.gudrunTag }}/binaries-${{ env.gudrunTag }}-windows.zip > gudrun-binaries.zip
      curl -L https://github.com/disorderedmaterials/ModEx/releases/download/${{ env.modexTag }}/binaries-${{ env.modexTag }}-windows.zip > modex-binaries.zip
  - name: Retrieve StartupFiles
    shell: bash
    run: |
      curl -L https://github.com/disorderedmaterials/Gudrun/releases/download/${{ env.gudrunTag }}/startupFiles-${{ env.gudrunTag }}.zip > startupFiles.zip
  - name: Assemble Directory
    shell: bash
    run: |
      if [ ! -e ${{ inputs.targetDir }} ]; then mkdir ${{ inputs.targetDir }}; fi
      unzip gudrun-binaries.zip
      mv binaries-${{ env.gudrunTag }}-*/* ${{ inputs.targetDir }}

      unzip modex-binaries.zip
      mv binaries-${{ env.modexTag }}-*/* ${{ inputs.targetDir }}

      unzip startupFiles.zip
      mv StartupFiles ${{ inputs.targetDir }}
