parameters:
- name: 'version'
  default: '3.9'
  type: string
- name: 'arch'
  default: 'x64'
  type: string
- name: os
  default: 'ubuntu'
  type: string
- name: osName
  default: 'linux'
  type: string
- name: gudrunTag
  default: ''
  type: string
steps:
  - task: UsePythonVersion@0
    displayName: "Use Python Version ${{ parameters.version }}"
    inputs:
      versionSpec: ${{ parameters.version }}
      architecture: ${{ parameters.arch }}

  - script: |
      pip install --upgrade pip
      pip install -r requirements.txt
    displayName: "Install dependencies"

  - bash: |
      if [[ "${{ parameters.osName }}" == "linux" ]]
      then
        sudo apt-get install libopengl0 -y
        sudo apt install libgl1-mesa-glx -y
      fi
    displayName: "Install OpenGL for linux"

  - bash: |
      curl -L https://github.com/disorderedmaterials/Gudrun/releases/download/${{ parameters.gudrunTag }}/binaries-${{ parameters.gudrunTag }}-${{ parameters.osName }}.zip > binaries.zip
      unzip binaries.zip
      mv binaries-${{ parameters.gudrunTag }}-${{ parameters.osName }} bin
      curl -L https://github.com/disorderedmaterials/Gudrun/releases/download/${{ parameters.gudrunTag }}/startupFiles-${{ parameters.gudrunTag }}.zip > startupFiles.zip
      unzip startupFiles.zip
      mv StartupFiles bin
  - bash: |
      pip install nose2
      nose2 --with-coverage --coverage-report xml --plugin nose2.plugins.junitxml --junit-xml tests
    displayName: 'Run tests'
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'nose2-*.xml'
      failTaskOnFailedTests: true
      testRunTitle: 'GudPy on Python ${{ parameters.version }} ${{ parameters.os }}'
    condition: succeededOrFailed()

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'coverage.xml'
